{"ast":null,"code":"var _jsxFileName = \"/Users/christy/CascadeProjects/MinimalistNotesApp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, query, where, getDocs } from 'firebase/firestore';\nimport { getAuth, onAuthStateChanged, signInAnonymously } from 'firebase/auth';\nimport './App.css';\nimport './index.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"YOUR_AUTH_DOMAIN\",\n  projectId: \"YOUR_PROJECT_ID\",\n  storageBucket: \"YOUR_STORAGE_BUCKET\",\n  messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n  appId: \"YOUR_APP_ID\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nfunction App() {\n  _s();\n  const [note, setNote] = useState('');\n  const [pastNotes, setPastNotes] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const currentDate = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  useEffect(() => {\n    signInAnonymously(auth).catch(console.error);\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n        fetchPastNotes(user.uid);\n      }\n    });\n  }, []);\n  const fetchPastNotes = async (userId, date = new Date()) => {\n    const today = date;\n    const timeFrames = [1, 7, 30, 365];\n    const notes = [];\n    for (const days of timeFrames) {\n      const pastDate = new Date(today);\n      pastDate.setDate(today.getDate() - days);\n      const q = query(collection(db, 'notes'), where('userId', '==', userId), where('date', '==', pastDate.toISOString().split('T')[0]));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        notes.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n    }\n    setPastNotes(notes);\n  };\n  const handleDateChange = date => {\n    if (!user) return; // Ensure user is authenticated\n    setSelectedDate(date);\n    fetchPastNotes(user.uid, date);\n    setNote(''); // Clear note to refresh placeholder\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user || note.trim() === '') return; // Ensure user is authenticated\n\n    try {\n      await addDoc(collection(db, 'notes'), {\n        userId: user.uid,\n        content: note,\n        date: selectedDate.toISOString().split('T')[0]\n      });\n      setNote('');\n      fetchPastNotes(user.uid, selectedDate);\n    } catch (error) {\n      console.error('Error adding document: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Elysius\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prompt\",\n        children: \"What\\u2019s one thing about today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: handleDateChange,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: note,\n        onChange: e => setNote(e.target.value),\n        maxLength: 280,\n        placeholder: `Write your note for ${selectedDate.toLocaleDateString()}...`,\n        className: \"note-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"save-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"past-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Memory Reflections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), pastNotes.length > 0 ? pastNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: note.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No reflections available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vnPj/2Lt1/GsZmEExfOBcBsBxGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getFirestore","collection","addDoc","query","where","getDocs","getAuth","onAuthStateChanged","signInAnonymously","Calendar","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","auth","App","_s","note","setNote","pastNotes","setPastNotes","user","setUser","selectedDate","setSelectedDate","Date","currentDate","toLocaleDateString","year","month","day","catch","console","error","fetchPastNotes","uid","userId","date","today","timeFrames","notes","days","pastDate","setDate","getDate","q","toISOString","split","querySnapshot","forEach","doc","push","data","id","handleDateChange","handleSubmit","e","preventDefault","trim","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","value","target","maxLength","placeholder","type","length","map","_c","$RefreshReg$"],"sources":["/Users/christy/CascadeProjects/MinimalistNotesApp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, query, where, getDocs } from 'firebase/firestore';\nimport { getAuth, onAuthStateChanged, signInAnonymously } from 'firebase/auth';\nimport './App.css';\nimport './index.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"YOUR_AUTH_DOMAIN\",\n  projectId: \"YOUR_PROJECT_ID\",\n  storageBucket: \"YOUR_STORAGE_BUCKET\",\n  messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n  appId: \"YOUR_APP_ID\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nfunction App() {\n  const [note, setNote] = useState('');\n  const [pastNotes, setPastNotes] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const currentDate = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  useEffect(() => {\n    signInAnonymously(auth).catch(console.error);\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUser(user);\n        fetchPastNotes(user.uid);\n      }\n    });\n  }, []);\n\n  const fetchPastNotes = async (userId, date = new Date()) => {\n    const today = date;\n    const timeFrames = [1, 7, 30, 365];\n    const notes = [];\n\n    for (const days of timeFrames) {\n      const pastDate = new Date(today);\n      pastDate.setDate(today.getDate() - days);\n\n      const q = query(collection(db, 'notes'), where('userId', '==', userId), where('date', '==', pastDate.toISOString().split('T')[0]));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        notes.push({ ...doc.data(), id: doc.id });\n      });\n    }\n    setPastNotes(notes);\n  };\n\n  const handleDateChange = (date) => {\n    if (!user) return; // Ensure user is authenticated\n    setSelectedDate(date);\n    fetchPastNotes(user.uid, date);\n    setNote(''); // Clear note to refresh placeholder\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!user || note.trim() === '') return; // Ensure user is authenticated\n\n    try {\n      await addDoc(collection(db, 'notes'), {\n        userId: user.uid,\n        content: note,\n        date: selectedDate.toISOString().split('T')[0]\n      });\n      setNote('');\n      fetchPastNotes(user.uid, selectedDate);\n    } catch (error) {\n      console.error('Error adding document: ', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Elysius</h1>\n        <p>{currentDate}</p>\n      </header>\n      <form onSubmit={handleSubmit} className=\"note-form\">\n        <p className=\"prompt\">What’s one thing about today?</p>\n        <Calendar\n          onChange={handleDateChange}\n          value={selectedDate}\n        />\n        <textarea\n          value={note}\n          onChange={(e) => setNote(e.target.value)}\n          maxLength={280}\n          placeholder={`Write your note for ${selectedDate.toLocaleDateString()}...`}\n          className=\"note-input\"\n        />\n        <button type=\"submit\" className=\"save-button\">Save</button>\n      </form>\n      <div className=\"past-notes\">\n        <h2>Memory Reflections</h2>\n        {pastNotes.length > 0 ? (\n          pastNotes.map((note) => (\n            <div key={note.id} className=\"note-card\">\n              <p>{note.content}</p>\n              <small>{note.date}</small>\n            </div>\n          ))\n        ) : (\n          <p>No reflections available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}